version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  gateway:
    build:
      context: ./backend
      dockerfile: Dockerfile.gateway
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - results_volume:/app/results
    restart: unless-stopped

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - VOLUME_PATH=/app/results
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - results_volume:/app/results
    restart: unless-stopped

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    command: celery -A backend.worker.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - worker
    restart: unless-stopped

volumes:
  redis_data:
  results_volume:

networks:
  default:
    name: doc-analyser